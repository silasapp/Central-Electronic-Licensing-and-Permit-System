
@model ELPS.Models.CompanyViewModel
@using ELPS.Domain.Entities
@using ELPS.Models


@{
    Layout = null;
    ViewBag.bizTyp = BussinessType.GetBizType();

}

<form action="/company/UpdateCompanyDetail" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CompanyView.Id)
    @Html.HiddenFor(model => model.CompanyView.User_Id)
    @Html.HiddenFor(model => model.CompanyView.Registered_Address_Id)
    @Html.HiddenFor(model => model.CompanyView.Operational_Address_Id)

    <h4>Company Information</h4>
    <hr />
    <div class="grid">
        <div class="row cells3">
            <div class="cell ">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Name)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.Name, new { htmlAttributes = new { @tabindex = "1", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Contact_FirstName)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.Contact_FirstName, new { htmlAttributes = new { @tabindex = "4" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Contact_FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Year_Incorporated)
                    @*<div class="input-control text" data-role="datepicker">
                            <input type="text">
                            @Html.ValidationMessageFor(model => model.CompanyView.Year_Incorporated, "", new { @class = "text-danger" })
                            <button class="button"><span class="mif-calendar"></span></button>
                        </div>*@
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.Year_Incorporated, new { htmlAttributes = new { @tabindex = "7" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Year_Incorporated, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Tin_Number)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.Tin_Number, new { htmlAttributes = new { @tabindex = "10", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Tin_Number, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Total_Asset)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.Total_Asset, new { htmlAttributes = new { @tabindex = "13" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Total_Asset, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="cell ">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Business_Type)
                    <div class="input-control text full-size">
                        <select required id="Business_Type" name="Business_Type" class="form-control" tabindex="2" disabled>
                            <option value="@Model.CompanyView.Business_Type">@Model.CompanyView.Business_Type</option>
                            @foreach (var item in (List<string>)ViewBag.bizTyp)
                            {
                            <option value="@item">@item</option>
                            }
                        </select>
                        @*@Html.EditorFor(model => model.CompanyView.Business_Type, new { htmlAttributes = new {  @tabindex = "2" } })*@
                        @Html.ValidationMessageFor(model => model.CompanyView.Business_Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Contact_LastName)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.Contact_LastName, new { htmlAttributes = new { @tabindex = "5" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Contact_LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.RC_Number)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.RC_Number, new { htmlAttributes = new { @tabindex = "8", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.RC_Number, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.No_Staff)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.No_Staff, new { htmlAttributes = new { @tabindex = "11" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.No_Staff, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Yearly_Revenue)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.Yearly_Revenue, new { htmlAttributes = new { @tabindex = "14" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Yearly_Revenue, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="cell ">
                <div class="form-group">
                    <label class="control-label">Company Email</label>
                    <div class="input-control text full-size">
                        <input type="email" name="EditEmail" value="@Model.CompanyView.User_Id" class="form-control" disabled tabindex="" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Affiliate)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.Affiliate, new { htmlAttributes = new { @tabindex = "3" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Affiliate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Contact_Phone)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.Contact_Phone, new { htmlAttributes = new { @tabindex = "6" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Contact_Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Nationality)
                    <div class="input-control text full-size">
                        @{var nty = (List<Country>)ViewBag.country;}
                        <input type="hidden" name="Nationality" value="@Model.CompanyView.Nationality" />
                        <select name="Nationality" id="Nationality" required class="form-control" tabindex="9">
                            <option value="">Select Nationality</option>
                            <option value="@Model.CompanyView.Nationality" selected>@Model.CompanyView.Nationality</option>
                        </select>

                        @Html.ValidationMessageFor(model => model.CompanyView.Nationality, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.No_Expatriate)
                    <div class="input-control text full-size">
                        @Html.EditorFor(model => model.CompanyView.No_Expatriate, new { htmlAttributes = new { @tabindex = "12" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.No_Expatriate, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>

        <hr class="clear" />
        <h4 class="">
            Company NSITF Section
        </h4>
        <div class="" id="ntifsDiv">
            @{var ntifs = (List<Company_NsitfView>)Model.CoyNsitfView;}

            @for (int i = 0; i < ntifs.Count; i++)
            {
                var src = string.IsNullOrEmpty(ntifs[i].FileSource) ? "/Content/Images/Captcha.png" : ntifs[i].FileSource;
                var divId = "ntifs" + i;

                var id = "ntifs[" + i + "].Id";
                var npc = "ntifs[" + i + "].No_People_Covered";
                var pn = "ntifs[" + i + "].Policy_No";
                var di = "ntifs[" + i + "].Date_Issued";
                var fi = "ntifs[" + i + "].FileId";
                var fn = "ntifs[" + i + "].FileName";
                var fs = "ntifs[" + i + "].FileSource";
                var file = "ntifs[" + i + "].file";
                string dt = String.Format("{0:MM/dd/yyyy}", ntifs[i].Date_Issued);
                var x = (ntifs[i].FileId == null ? 0 : ntifs[i].FileId);
            <div class="row cells3">
                <div class="cell size4">
                    <div class="form-group">
                        @Html.Label("Number of People coverd")
                        <div class="input-control text full-size">
                            <input type="hidden" name="@id" value="@ntifs[i].id" />
                            <input type="hidden" name="@fi" value="@x" />

                            <input type="text" name="@npc" readonly value="@ntifs[i].No_People_Covered" class="form-control lefty" required placeholder="No of People covered" />
                        </div>
                    </div>
                </div>
                <div class="cell size4">
                    <div class="form-group">
                        @Html.Label("Policy Number")
                        <div class="input-control text full-size">
                            <input type="text" name="@pn" readonly value="@ntifs[i].Policy_No" class="form-control lefty" required placeholder="Policy No" />
                        </div>
                    </div>
                </div>
                <div class="cell size4">
                    <div class="form-group">
                        @Html.Label("Date Issued")
                        <div class="input-control text full-size">
                            <span class="mif-calendar prepend-icon"></span>
                            <input type="text" name="@di" value="@dt" class="datePicker" readonly required />
                        </div>
                    </div>
                </div>
            </div>
            }


        </div>

        <hr class="clear" />
        <h4 class="">MEDICAL RETAINERSHIP</h4>
        <div id="compMedDiv" class="">

            @{var compMed = (List<Company_MedicalView>)Model.CoyMedView;}

            @for (int i = 0; i < compMed.Count; i++)
            {
                var src = string.IsNullOrEmpty(compMed[i].FileSource) ? "/Content/Images/Captcha.png" : compMed[i].FileSource;
                var divId = "compMed" + i;

                var id = "compMed[" + i + "].Id";
                var mo = "compMed[" + i + "].Medical_Organisation";
                var ad = "compMed[" + i + "].Address";
                var pn = "compMed[" + i + "].Phone";
                var em = "compMed[" + i + "].Email";
                var di = "compMed[" + i + "].Date_Issued";
                var fi = "compMed[" + i + "].FileId";
                var file = "compMed[" + i + "].file";
                var x = (compMed[i].FileId == null ? 0 : compMed[i].FileId);
            <div class="row cells3" id="@divId">
                <div class="cell size4">
                    <input type="hidden" name="@id" value="@compMed[i].id" />
                    <input type="hidden" name="@fi" value="@x" />
                    <div class="form-group">
                        <label>Hospital Name</label>
                        <div class="input-control text full-size">
                            <input type="text" name="@mo" readonly value="@compMed[i].Medical_Organisation" class="form-control lefty" required placeholder="Medical Organization" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <div class="input-control text full-size">
                            <input type="email" name="@em" readonly value="@compMed[i].Email" class="form-control lefty" required placeholder="Email address" />
                        </div>
                    </div>
                </div>
                <div class="cell size4">
                    <div class="form-group">
                        <label>Telephone</label>
                        <div class="input-control text full-size">
                            <input type="text" name="@pn" readonly value="@compMed[i].Phone" class="form-control" required />
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Date Issued</label>
                        <div class="input-control text full-size" data-role="datepicker">
                            <input type="text" readonly name="@di" value="@String.Format("{0:MM/dd/yyyy}", compMed[i].Date_Issued)" required />
                            <button class="button"><span class="mif-calendar"></span></button>
                        </div>
                    </div>
                </div>
                <div class="cell size4">
                    <div class="form-group">
                        <label>Address</label>
                        <div class="input-control textarea full-size">
                            <textarea name="@ad" readonly class="form-control" required>@compMed[i].Address</textarea>
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>

        <hr class="clear" />
        <h4 class="">PROFFESSIONAL ORGANISATION</h4>
        <div id="compProfDiv" class="">
            @{var compProf = (List<Company_ProffessionalView>)Model.CoyProfView;}

            @for (int i = 0; i < compProf.Count; i++)
            {
                var src = string.IsNullOrEmpty(compProf[i].FileSource) ? "/Content/Images/Captcha.png" : compProf[i].FileSource;
                var divId = "compProf" + i;

                var id = "compProf[" + i + "].Id";
                var po = "compProf[" + i + "].Proffessional_Organisation";
                var cn = "compProf[" + i + "].Cert_No";
                var di = "compProf[" + i + "].Date_Issued";
                var fi = "compProf[" + i + "].FileId";
                var file = "compProf[" + i + "].file";
                var x = (compProf[i].FileId == null ? 0 : compProf[i].FileId);

            <div class="row cells3" id="@divId">
                <div class="cell size4">
                    <input type="hidden" name="@id" value="@compProf[i].Id" />
                    <input type="hidden" name="@fi" value="@x" />

                    <div class="form-group">
                        <div class="input-control text full-size">
                            <input type="text" name="@po" readonly value="@compProf[i].Proffessional_Organisation" class="form-control lefty" required placeholder="Professional Organization" />
                        </div>
                    </div>
                </div>
                <div class="cell size4">
                    <div class="form-group">
                        <div class="input-control text full-size">
                            <input type="text" name="@cn" readonly value="@compProf[i].Cert_No" class="form-control" required placeholder="Policy Number" />
                        </div>
                    </div>
                </div>
                <div class="cell size4">
                    <div class="form-group">
                        <div class="input-control text full-size" data-role="datepicker">
                            <input type="text" name="@di" readonly value="@String.Format("{0:MM/dd/yyyy}", compProf[i].Date_Issued)" class="form-control datePicker" required />
                            <button class="button"><span class="mif-calendar"></span></button>
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>

        <hr class="clear" />
        <h4 class="">
            REQUEST FOR EXPATRIATE QUOTA
        </h4>
        <div id="compExpertDiv" class="">
            @{var compExpert = (List<Company_Expatriate_QuotaView>)Model.CoyExpQView;}

            @for (int i = 0; i < compExpert.Count; i++)
            {
                var src = string.IsNullOrEmpty(compExpert[i].FileSource) ? "/Content/Images/Captcha.png" : compExpert[i].FileSource;
                var divId = "compExpert" + i;

                var id = "compExpert[" + i + "].Id";
                var nm = "compExpert[" + i + "].Name";
                var fi = "compExpert[" + i + "].FileId";
                var file = "compExpert[" + i + "].file";
                var x = (compExpert[i].FileId == null ? 0 : compExpert[i].FileId);

            <div class="row cells2" id="@divId">
                <div class="cell size6">
                    <input type="hidden" name="@id" value="@compExpert[i].Id" />
                    <input type="hidden" name="@fi" value="@x" />

                    <div class="form-group">
                        <div class="input-control text full-size">
                            <input type="text" name="@nm" readonly value="@compExpert[i].Name" class="form-control" required placeholder="Expatraite Name" />
                        </div>
                    </div>
                </div>
                <div class="cell size6">

                </div>
                @*<div class="col-md-3 col-md-offset-1">
                        <input type="file" name="@file" value=" " />
                    </div>
                    <div class="col-md-1">
                        <span class="btn btn-xs btn-danger pull-right compExpertDelete" data-divid="@divId">
                            <i class="glyphicon glyphicon-remove"></i>
                        </span>
                    </div>*@
            </div>
            }
        </div>

        <hr class="clear" />
        <h4 class="">
            TECHNICAL AGREEMENT OR MOU
            @*<span class="btn btn-primary" id="compTechAddButton">Add another Certificate <i class="glyphicon glyphicon-plus"></i></span>*@
        </h4>
        <div id="compTechDiv" class="">
            @{var compTech = (List<Company_Technical_AgreementView>)Model.CoyTechAgreeView;}

            @for (int i = 0; i < compTech.Count; i++)
            {
                Company_Technical_AgreementView cta = new Company_Technical_AgreementView();
                cta = compTech[i];
                cta.FileId = (cta.FileId == null ? 0 : cta.FileId);
                var src = string.IsNullOrEmpty(cta.FileSource) ? "/Content/Images/Captcha.png" : cta.FileSource;
                var divId = "compTech" + i;

                //var id = "compTech[" + i + "].Id";
                //var nm = "compTech[" + i + "].Name";
                //var fi = "compTech[" + i + "].FileId";
                //var file = "compTech[" + i + "].file";
            <div class="row cells" id="@divId">
                <div class="cell size6">
                    <input type="hidden" name="compTech[@i].Id" value="@cta.Id" />
                    <input type="hidden" name="compTech[@i].FileId" value="@cta.FileId" />
                    <div class="form-group">
                        <div class="input-control text full-size">
                            <input type="text" name="compTech[@i].Name" readonly value="@cta.Name" class="form-control" required placeholder="" />
                        </div>
                    </div>
                </div>
                @*<div class="col-md-3 col-md-offset-1">
                        <input type="file" name="@file" value=" " />
                    </div>
                    <div class="col-md-1">
                        <span class="btn btn-xs btn-danger pull-right compTechDelete" data-divid="@divId">
                            <i class="glyphicon glyphicon-remove"></i>
                        </span>
                    </div>*@
                <div class="clear"></div>
            </div>
            }
        </div>

        <hr class="clear" />
        <h4>Accident Rerport</h4>
        <div class="row cells3">
            <div class="cell">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Accident)
                    <div class="input-control text full-size">
                        @Html.TextBoxFor(m => m.CompanyView.Accident, new { @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.CompanyView.Accident, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="cell colspan2">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyView.Accident_Report)
                    <div class="input-control textarea full-size">
                        @Html.TextAreaFor(model => model.CompanyView.Accident_Report, new { htmlAttributes = new { @tabindex = "13", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Accident_Report, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <h4>@Html.LabelFor(model => model.CompanyView.Training_Program)</h4>
        <div class="row ">
            <div class="cell">
                <div class="form-group">
                    <div class="input-control textarea full-size">
                        @Html.TextAreaFor(model => model.CompanyView.Training_Program, new { htmlAttributes = new { @tabindex = "13", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Training_Program, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <h4>@Html.LabelFor(model => model.CompanyView.Mission_Vision)</h4>
        <div class="row">
            <div class="cell">
                <div class="form-group">
                    <div class="input-control textarea full-size">
                        @Html.TextAreaFor(model => model.CompanyView.Mission_Vision, new { htmlAttributes = new { @tabindex = "13", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.CompanyView.Mission_Vision, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <h4>HSE Document Available</h4>
        <div class="row">
            <div class="cell">
                <div class="form-group">
                    <div class="input-control select">
                        <select class="form-control" id="HSEDoc"  name="HSEDoc" style="width: 150px;" required>
                            <option>Choose option</option>
                            @if (Model.CompanyView.HSEDoc == null)
                            {
                                <option value="false">No</option>
                                <option value="true">Yes</option>
                            }
                            else if (Model.CompanyView.HSEDoc.Value)
                            {
                                <option value="false">No</option>
                                <option value="true" selected>Yes</option>
                            }
                            else
                            {
                                <option value="false" selected>No</option>
                                <option value="true">Yes</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (User.IsInRole("Support"))
        {
            <div class="form-group">
                <div class="txtcenter">
                    <input type="submit" value="Save" class="btn btn-warning" style="width: 200px;" />
                </div>
            </div>
        }
</form>
